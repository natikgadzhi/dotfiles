# remap prefix from 'C-b' to 'C-a'
# unbind C-b
# set-option -g prefix C-x
# bind-key C-x send-prefix

set -g mouse on
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Set default shell to Fish. This won't work outside of brew environments.
set-option -g default-shell /opt/homebrew/bin/fish

# manage windows
# Set base window index to 1 so they start from 1, not 0.
bind c new-window -c "#{pane_current_path}"
set -g renumber-windows on
set -g base-index 1

# don't rename windows automatically
set-option -g allow-rename off

# Jump to window with Ctrl + index
bind -n C-1 send-keys C-a 1

# split panes using v and h respectively
# defaults are % and somethin
bind v split-window -h
bind h split-window -v
unbind '"'
unbind %

# reload config file on ctrl-b r
bind r source-file ~/.config/tmux/tmux.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Resizing panes

bind -n M-Left resize-pane -L 10
bind -n M-Right resize-pane -R 10
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# clear screen and scrollback history
bind C-l send-keys 'C-l'

# Use vi key bindings in copy mode
set-window-option -g mode-keys vi

# Configure 'v' in copy mode to begin text selection, similar to Vim's visual mode
# This allows selecting text with 'v' and then defining the selection area with movement keys
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy

# Enable OSC 52 clipboard integration for terminal clipboard support
set -g set-clipboard on

# Update default binding of Enter to also use copy-pipe-and-cancel
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel pbcopy

# Mouse-based copy operations
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel pbcopy
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Double-click to select word and copy
bind-key -T root DoubleClick1Pane select-pane \; copy-mode \; send-keys -X select-word \; send-keys -X copy-pipe-and-cancel pbcopy

# Triple-click to select line and copy
bind-key -T root TripleClick1Pane select-pane \; copy-mode \; send-keys -X select-line \; send-keys -X copy-pipe-and-cancel pbcopy

bind -T copy-mode WheelUpPane send -N1 -X scroll-up
bind -T copy-mode WheelDownPane send -N1 -X scroll-down

# STATUS LINE
set -g status on
set -g status-interval 1
# set -g status-justify left # Careful! It is spelled "centre" not "center".
set -g status-style fg=white

# Highlight the current window.
setw -g window-status-current-style fg=black,bg=blue,bright
